create table author (
                        author_id	serial PRIMARY KEY,
                        name_author	VARCHAR(50)
);

insert into author(name_author)
values
    ('Булгаков М.А.'),
    ('Достоевский Ф.М.'),
    ('Есенин С.А.'),
    ('Пастернак Б.Л.'),
    ('Лермонтов М.Ю.');

create table genre (
                       genre_id serial PRIMARY KEY,
                       name_genre	VARCHAR(30)
);

insert into genre(name_genre) values ('Роман'),
                                  ('Поэзия'),
                                  ('Приключения');

CREATE TABLE book (
                      book_id serial PRIMARY KEY,
                      title VARCHAR(50),
                      author_id INT NOT NULL,
                      genre_id int,
                      price DECIMAL(8,2),
                      amount INT,
                      FOREIGN KEY (author_id)  REFERENCES author on DELETE cascade,
                      FOREIGN KEY (genre_id)  REFERENCES genre on DELETE set null
);

INSERT INTO book (title, author_id, genre_id, price, amount)
VALUES ('Мастер и Маргарита', 1, 1, 670.99, 3),
       ('Белая гвардия ', 1, 1, 540.50, 5),
       ('Идиот', 2, 1, 460.00, 10),
       ('Братья Карамазовы', 2, 1, 799.01, 3),
       ('Игрок', 2, 1, 480.50, 10),
       ('Стихотворения и поэмы', 3, 2, 650.00, 15),
       ('Черный человек', 3, 2, 570.20, 6),
       ('Лирика', 4, 2, 518.99, 2);

Вывести название, жанр и цену тех книг, количество которых больше 8, 
в отсортированном по убыванию цены виде.

select title, name_genre, price
from genre g join book b on g.genre_id = b.genre_id
where b.amount > 8
order by price desc;

Вывести все жанры, которые не представлены в книгах на складе.

select name_genre
from genre g left join book b on g.genre_id = b.genre_id
where b.title is null;

SELECT g.name_genre
FROM genre g
WHERE not EXISTS(SELECT * from book b WHERE b.genre_id = g.genre_id);

Необходимо в каждом городе провести выставку книг каждого автора 
в течение 2020 года. Дату проведения выставки выбрать случайным образом. 
Создать запрос, который выведет город, автора и дату проведения выставки. 
Последний столбец назвать Дата. Информацию вывести, отсортировав сначала 
в алфавитном порядке по названиям городов, а потом по убыванию дат 
проведения выставок.

create table city (
    city_id serial primary key,
    name_city text
);

insert into city(name_city)
values ('Москва'),
       ('Санкт-Петербург'),
       ('Владивосток');

select name_city, name_author, 
            '2020-01-01'::date + floor(random() * 365)::int as Дата
from author, city
order by name_city, Дата desc;

Вывести информацию о книгах (жанр, книга, автор), относящихся к жанру, 
включающему слово «роман» в отсортированном по названиям книг виде.

select name_genre, title, name_author
from book b join genre g on g.genre_id = b.genre_id
            join author a on a.author_id = b.author_id
where name_genre like 'Роман'
order by title;

Посчитать количество экземпляров  книг каждого автора из таблицы author.  
Вывести тех авторов,  количество книг которых меньше 10, 
в отсортированном по возрастанию количества виде. 
Последний столбец назвать Количество.

select name_author, sum(amount) as Количество
from book b right join author a on a.author_id = b.author_id
group by name_author
having sum(amount) < 10 or sum(amount) is null
order by Количество;

 Вывести в алфавитном порядке всех авторов, которые пишут только в одном жанре. 
Поскольку у нас в таблицах так занесены данные, что у каждого автора книги 
только в одном жанре,  для этого запроса внесем изменения в таблицу book. 
Пусть у нас  книга Есенина «Черный человек» относится к жанру «Роман», 
а книга Булгакова «Белая гвардия» к «Приключениям» (эти изменения в таблицы 
уже внесены).

update book set genre_id = 1
where book_id = 7;

update book set genre_id = 3
where book_id = 2;

select name_author
from book b inner join author a on a.author_id = b.author_id
group by name_author
having count(distinct b.genre_id) = 1
order by name_author;

Вывести информацию о книгах (название книги, фамилию и инициалы автора, 
название жанра, цену и количество экземпляров книг), написанных в самых 
популярных жанрах, в отсортированном в алфавитном порядке по названию книг виде. 
Самым популярным считать жанр, общее количество экземпляров книг которого 
на складе максимально.

INSERT INTO book (title, author_id, genre_id, price, amount)
VALUES ('Мастер и Маргарита', 1, 1, 670.99, 3),
       ('Белая гвардия ', 1, 1, 540.50, 5),
       ('Братья Карамазовы', 2, 1, 799.01, 3),
       ('Игрок', 2, 1, 480.50, 10),
       ('Стихотворения и поэмы', 3, 2, 650.00, 15),
       ('Черный человек', 3, 2, 570.20, 6),
       ('Лирика', 4, 2, 518.99, 10),
       ('Идиот', 2, 1, 460.00, 10),
       ('Герой нашего времени', 5, 3, 570.59, 2),
       ('Доктор Живаго', 4, 3, 740.50, 5);

select title, name_author, name_genre, price, amount
from book b inner join genre g on g.genre_id = b.genre_id
            inner join author a on a.author_id = b.author_id
where b.genre_id in (select genre_id
                    from book
                    group by genre_id
                    having sum(amount) = (select sum(amount) as max_amount
                                          from book
                                          group by genre_id
                                          order by max_amount desc
                                          limit 1))
order by b.title;


