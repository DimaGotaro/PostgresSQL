psql \! chcp 1251
set client_encoding='win1251';
SET search_path TO myschema;

SHOW default_transaction_isolation;

посмотреть все ограничения
SELECT * FROM information_schema.table_constraints;

посмотреть ограничения конкретной таблицы
SELECT * FROM information_schema.table_constraints WHERE table_name = 'book';

create table book 
(book_id serial primary key, 
title varchar(50), 
author varchar(30), 
price decimal(8,2), 
amount int);

insert into book 
(title, author, price, amount) 
values 
('Мастер и Маргарита', 'Булгаков М.А.', 670.99, 3), 
('Белая гвардия', 'Булгаков М.А.', 540.50, 5), 
('Идиот', 'Достоевский Ф.М.', 460.00, 10), 
('Братья Карамазовы', 'Достоевский Ф.М.', 799.01, 2), 
('Стихотворения и поэмы', 'Есенин С.А.', 650.00, 15);


Для каждой книги из таблицы book установим скидку следующим образом: 
если количество книг меньше 4, то скидка будет составлять 50% от цены, 
в противном случае 30%.

select title, author, amount,
case when amount < 4 then price * 0.5 else price * 0.7 end as sale
from book;

Для каждой книги из таблицы book установим скидку следующим образом: 
если количество книг равно 10, то скидка будет составлять 50% от цены,
если количество книг равно 15, то скидка будет составлять 30% от цены,
в противном случае 10%.

аналогично swich case
select title, author, amount,
       case amount when 10 then price * 0.5
                   when 15 then price * 0.7
           else price * 0.9 end as sale
from book;

Для каждой книги из таблицы book установим скидку следующим образом: 
если количество книг меньше 4, то скидка будет составлять 50% от цены,
если количество книг больше 4, то скидка будет составлять 40% от цены,
в противном случае 30%.

select title, author, amount,
       case when amount < 4 then price * 0.5
            when amount > 3 then price * 0.6
           else price * 0.7 end as sale
from book;

Для каждой книги из таблицы book установим скидку следующим образом: 
если количество книг меньше 4, то скидка будет составлять 50% от цены, 
в противном случае 30%. 
Цена по скидке должна отображаться с двумя знаками после запятой.

select title, author, amount,
       round((case when amount < 4 then price * 0.5 else price * 0.7 end), 2) 
as sale
from book;

Усложним вычисление скидки в зависимости от количества книг. 
Если количество книг меньше 4 – то скидка 50%, меньше 11 – 30%, 
в остальных случаях – 10%. И еще укажем какая именно скидка на каждую книгу.

select title, author, amount, price,
       case when amount < 4 then round(price * 0.5, 2)
            when amount < 11 then round(price * 0.7, 2)
            else price * 0.9 end as sale,
       case when amount < 4 then 'Скидка 50%'
            when amount < 11 then 'Скидка 30%'
            else 'Скидка 10%' end as Скидка
from book;

Вывести название и цену тех книг, цены которых меньше 600 рублей.

select title, price from book
where price < 600;

Вывести название, автора  и стоимость (цена умножить на количество) тех книг, 
стоимость которых больше 4000 рублей

select title, price * amount as стоимость from book
where price * amount > 4000;

Вывести название, автора,  цену  и количество всех книг, 
цена которых меньше 500 или больше 600, а стоимость всех экземпляров 
этих книг больше или равна 5000.

select title, author, price, amount from book
where (price < 500 or price > 600) and price * amount >= 5000;

Выбрать названия и количества тех книг, количество которых от 5 до 14 включительно.

SELECT title, amount
FROM book
WHERE amount BETWEEN 5 AND 14;

Выбрать названия и цены книг, написанных Булгаковым или Достоевским.

SELECT title, price 
FROM book
WHERE author IN ('Булгаков М.А.', 'Достоевский Ф.М.');

Вывести название и авторов тех книг, цены которых принадлежат 
интервалу от 540.50 до 800 (включая границы),  
а количество или 2, или 3, или 5, или 7 .

select title, author from book
where (price between 540.5 and 800) and (amount in (2, 3, 5, 7));

Вывести название, автора и цены книг. Информацию  отсортировать 
по названиям книг в алфавитном порядке, по первому столбцу

SELECT title, author, price
FROM book
ORDER BY 1;

Вывести автора, название и количество книг, в отсортированном 
в алфавитном порядке по автору и по убыванию количества, для тех книг, 
цены которых меньше 750 рублей.

select author, title, amount from book
where price < 750
order by author, amount desc;

Вывести  автора и название  книг, количество которых принадлежит интервалу 
от 2 до 14 (включая границы). Информацию  отсортировать сначала по авторам 
(в обратном алфавитном порядке), а затем по названиям книг (по алфавиту).

select author, title from book
where amount between 2 and 14
order by author desc, title;

Вывести названия книг, которые содержат букву "и" как отдельное слово, 
если считать, что слова в названии отделяются друг от друга пробелами 
и не содержат знаков препинания.

SELECT title FROM book 
WHERE   title LIKE "% и %" /*отбирает слово И внутри названия */
    OR title LIKE "и %" /*отбирает слово И в начале названия */
    OR title LIKE "% и" /*отбирает слово И в конце названия */
    OR title LIKE "и" /* отбирает название, состоящее из одного слова И */

Вывести название и автора тех книг, название которых состоит из двух и более слов, 
а инициалы автора содержат букву «С». Считать, что в названии слова 
отделяются друг от друга пробелами и не содержат знаков препинания, 
между фамилией автора и инициалами обязателен пробел, инициалы записываются 
без пробела в формате: буква, точка, буква, точка. 
Информацию отсортировать по названию книги в алфавитном порядке.

select title, author from book
where title like '%_ _%' 
and author like '%С.%'
order by title;

Магазин счёл, что классика уже не пользуется популярностью, 
поэтому необходимо в выборке:
1. Сменить всех авторов на "Донцова Дарья".
2. К названию каждой книги в начале дописать "Евлампия Романова и".
3. Цену поднять на 42%.
4. Отсортировать по убыванию цены.

select 'Донцова Дарья' as author,
       concat('Евлампия Романова и ', title) as title,
       round((price * 1.42), 2) as price
       from book
order by price desc;

Выбор уникальных авторов.

select distinct author from book;

select author from book
group by author;

Посчитать, количество различных книг и количество экземпляров 
книг каждого автора , хранящихся на складе.  Столбцы назвать Автор, 
Различных_книг и Количество_экземпляров соответственно.

select author as Автор, 
count(DISTINCT title) as Различных_книг, 
sum(amount) as Количество_экземпляров from book
group by author;

Вывести фамилию и инициалы автора, минимальную, максимальную и 
среднюю цену книг каждого автора . Вычисляемые столбцы назвать 
Минимальная_цена, Максимальная_цена и Средняя_цена соответственно.

select author, min(price) as Минимальная_цена,
       max(price) as Максимальная_цена,
       round(avg(price), 2) as Средняя_цена
           from book
group by author;

Для каждого автора вычислить суммарную стоимость книг S (имя столбца Стоимость), 
а также вычислить налог на добавленную стоимость  для полученных сумм 
(имя столбца НДС ) , который включен в стоимость и составляет k = 18%,  
а также стоимость книг  (Стоимость_без_НДС) без него. 
Значения округлить до двух знаков после запятой.

select author,
       round(sum(price * amount), 2) as Стоимость,
       round(sum(price * amount - price * amount / 1.18), 2) as НДС,
       round(sum(price * amount / 1.18), 2) as Стоимость_без_НДС
from book
group by author;

Вывести  цену самой дешевой книги, цену самой дорогой и среднюю цену уникальных 
книг на складе. Названия столбцов Минимальная_цена, Максимальная_цена, 
Средняя_цена соответственно. Среднюю цену округлить до двух знаков после запятой.

select min(price) as Минимальная_цена,
       max(price) as Максимальная_цена,
       round(avg(price), 2) as Средняя_цена
       from book;

Найти минимальную и максимальную цену книг всех авторов, 
общая стоимость книг которых больше 5000.
having нужен для использования агрегатных функций в условии.
В условиях where агрегатные функции использовать нельзя!

select
       sum(price * amount),
       min(price) as Минимальная_цена,
       max(price) as Максимальная_цена
from book
having sum(price * amount) > 5000;

+ Результат вывести по убыванию минимальной цены.

select author,
       sum(price * amount),
       min(price) as Минимальная_цена,
       max(price) as Максимальная_цена
from book
group by author
having sum(price * amount) > 5000
order by Минимальная_цена desc;

Вычислить среднюю цену и суммарную стоимость тех книг, 
количество экземпляров которых принадлежит интервалу от 5 до 14, включительно. 
Столбцы назвать Средняя_цена и Стоимость, 
значения округлить до 2-х знаков после запятой.

select round(avg(price), 2) as Средняя_цена,
       sum(price * amount) as Стоимость
from book
where amount between 5 and 14;

Вывести максимальную и минимальную цену книг каждого автора, кроме Есенина, 
количество экземпляров книг которого больше 10.

select author, max(price), min(price)
from book
where author != 'Есенин С.А.'
group by author
having sum(amount) > 10

Вывести информацию о самой дешевой книге, хранящейся на складе.

select * from book
order by price desc
limit 1;

select * from book
where price = (select min(price) from book);

Вывести информацию (автора, название и цену) о  книгах, цены которых меньше 
или равны средней цене книг на складе. Информацию вывести в отсортированном 
по убыванию цены виде. Среднее вычислить как среднее по цене книги.

select author, title, price from book
where price <= (select avg(price) from book)
order by price desc;

Вывести информацию о книгах, количество экземпляров которых отличается 
от среднего количества экземпляров книг на складе более чем на 3. 
То есть нужно вывести и те книги, количество экземпляров которых меньше 
среднего на 3, или больше среднего на 3.
abc - модуль числа

select author, title, amount from book
where amount not between ((select avg(amount) from book) - 3) and ((select avg(amount) from book) + 3);

select title, author, amount from book
where abs(amount - (select avg(amount) from book)) > 3;

Вывести информацию (автора, название и цену) о тех книгах, 
цены которых превышают минимальную цену книги 
на складе не более чем на 150 рублей в отсортированном по возрастанию цены виде.

select author, title, price from book
where (price - (select min(price) from book)) between 0 and 150
order by price;

Вывести информацию о книгах тех авторов, 
общее количество экземпляров книг которых не менее 12.

select title, author, amount, price from book
where author in (select author
                 from book
                 group by author
                 having sum(amount) >= 12);

Вывести информацию (автора, книгу и количество) о тех книгах, 
количество экземпляров которых в таблице book не дублируется.

select author, title, amount from book
where amount in (select amount
                 from book
                 group by amount
                 having count(amount) = 1);

Операторы ALL и ANY можно использовать только с вложенными запросами.
Вывести информацию о тех книгах, количество которых меньше самого 
маленького среднего количества книг каждого автора.

select title, author, price, amount
from book
where amount < all (select avg(amount)
                    from book
                    group by author);

Вывести информацию о книгах(автор, название, цена), цена которых меньше 
самой большой из минимальных цен, вычисленных для каждого автора.

select author, title, price
from book
where price < any (select min(price)
                    from book
                    group by author);

Вывести информацию о книгах, количество экземпляров которых отличается 
от среднего количества экземпляров книг на складе более чем на 3,  
а также указать среднее значение количества экземпляров книг.

select title, author, amount, (select round(avg(amount), 2)
                               from book) as Среднее_кол_во
from book
where abs(amount - (select avg(amount) from book)) > 3;

Полученное значение можно округлить "вниз" - до ближайшего меньшего целого.

select title, author, amount, floor((select round(avg(amount), 2)
                               from book)) as Среднее_кол_во
from book
where abs(amount - (select avg(amount) from book)) > 3;

Два космонавта хотят взять с собой в полет по книжке. 
Чем книга дороже, тем она интереснее. 
Капитан возьмет самую дорогую, какую книгу возьмет в полет помощник, 
если они договорились взять 2 самые интересные книги.
P.S. Все книги имеют разную цену.

select author, title
from (select *
      from book
      order by price desc
      limit 2) as sub
order by price
limit 1;

select author, title
from book
where price = (select price
               from book
               order by price desc
               limit 1 offset 1);

select author, title
from book
where price = (select min(price) from
               (select price
               from book
               order by price desc
               limit 3) as sub);

select author, title
from (select ROW_NUMBER () OVER (ORDER BY price desc) AS RowNum, *
      from book) as sub
where RowNum = 3;

удаление
delete from book
where book_id = 6;

изменение данных
update book set amount = 3 where book_id = 1;




